import React, { useState, useEffect, useCallback } from "react";
import { useDispatch, useSelector } from "react-redux";
import { BrowserRouter as Router, Switch, Route, Link } from "react-router-dom";
import {
  LogoutOutlined,
  FieldTimeOutlined,
  LoginOutlined,
  UserAddOutlined,
  HomeOutlined,
  SwapOutlined,
  UserOutlined,
  DollarCircleOutlined,
} from "@ant-design/icons";
import { Row, Col, Button } from "antd";
import Login from "./components/Login";
import Register from "./components/Register";
import Home from "./components/Home";
import ControlPanel from "./components/ControlPanel";
import Profile from "./components/Profile";
import BoardUser from "./components/BoardUser";
import BoardModerator from "./components/BoardModerator";
import BoardAdmin from "./components/BoardAdmin";
import Staking from "./components/staking";
import { logout } from "./slices/auth";
import EventBus from "./common/EventBus";

import "bootstrap/dist/css/bootstrap.min.css";
import "./App.css";
import Footer from "./components/footer";
let serverTimer;
const App = () => {
  const [showAdminBoard, setShowAdminBoard] = useState(false);
  const [showCollapse, setShowCollapse] = useState(false);

  const [serverTimeState, setServerTime] = useState("Server time");
  const { user: currentUser } = useSelector((state) => state.auth);
  const dispatch = useDispatch();

  const logOut = useCallback(() => {
    dispatch(logout());
  }, [dispatch]);

  useEffect(() => {
    serverTime();
    serverTimer = setInterval(() => serverTime(), 60000);

    if (currentUser) {
      setShowAdminBoard(currentUser.role === "admin");
    } else {
      setShowAdminBoard(false);
    }

    EventBus.on("logout", () => {
      logOut();
    });

    return () => {
      EventBus.remove("logout");
      clearInterval(serverTimer);
    };
  }, [currentUser, logOut]);
  function serverTime() {
    const time =
      new Date().getFullYear() +
      "-" +
      (new Date().getMonth() + 1) +
      "-" +
      new Date().getDate() +
      " " +
      new Date().getHours() +
      ":" +
      new Date().getMinutes();
    setServerTime(time);
  }
  return (
    <Router>
      <div>
        <nav className="navbar  navbar-expand-sm  navbar-dark  custom-dark">
          <div className="container-fluid">
            <Link to={"/"} className="navbar-brand ">
              Arbitex.IO
            </Link>
            <button
              className={
                showCollapse ? "navbar-toggler" : "navbar-toggler collapsed"
              }
              type="button"
              data-bs-toggle="collapse"
              data-bs-target="#collapsibleNavbar"
              aria-expanded={showCollapse ? true : false}
              onClick={() => setShowCollapse(!showCollapse)}
            >
              <span className="navbar-toggler-icon"></span>
            </button>
            <div
              className={
                showCollapse
                  ? "navbar-collapse collapse show"
                  : "navbar-collapse collapse"
              }
              id="collapsibleNavbar"
            >
              <ul className="navbar-nav mr-auto">
                <li className="nav-item">
                  <Link
                    to={"/home"}
                    className="nav-link"
                    onClick={() => setShowCollapse(!showCollapse)}
                  >
                    About Us
                  </Link>
                </li>
                {/* {!currentUser && (
                  <li className="nav-item">
                    <Link to={"/home"} className="nav-link">
                      PRODUCTS
                    </Link>
                  </li>
                )} */}
                <li className="nav-item">
                  <Link
                    to={"/home"}
                    className="nav-link"
                    onClick={() => setShowCollapse(!showCollapse)}
                  >
                    Blog
                  </Link>
                </li>
                {/* {!currentUser && (
              <li className="nav-item">
                <Link to={"/home"} className="nav-link">
                  CAREER
                </Link>
              </li>
            )}
            {!currentUser && (
              <li className="nav-item">
                <Link to={"/home"} className="nav-link">
                  ACADEMY
                </Link>
              </li>
            )} */}
                {showAdminBoard && (
                  <li className="nav-item">
                    <Link
                      to={"/admin"}
                      className="nav-link"
                      onClick={() => setShowCollapse(!showCollapse)}
                    >
                      Manage Platform
                    </Link>
                  </li>
                )}
                {currentUser && (
                  <>
                    <li className="nav-item">
                      <Link
                        to={"/controlpanel/dashboard"}
                        className="nav-link"
                        onClick={() => setShowCollapse(!showCollapse)}
                      >
                        Control Panel
                      </Link>
                    </li>
                    <li className="nav-item">
                      <Link
                        to={"/staking"}
                        className="nav-link"
                        onClick={() => setShowCollapse(!showCollapse)}
                      >
                        Staking
                      </Link>
                    </li>
                  </>
                )}
              </ul>

              {currentUser ? (
                <ul className="navbar-nav ml-auto">
                  <li className="nav-item">
                    <div className="nav-link">
                      <FieldTimeOutlined style={{ fontSize: "28px" }} />{" "}
                      {serverTimeState}
                    </div>
                  </li>
                  <li className="nav-item">
                    <a href="/login" className="nav-link" onClick={logOut}>
                      <Row>
                        <LogoutOutlined style={{ fontSize: "24px" }} />
                        <p style={{ marginLeft: 10 }}>Log Out</p>
                      </Row>
                    </a>
                  </li>
                </ul>
              ) : (
                <ul className="navbar-nav ml-auto">
                  <li className="nav-item">
                    <Link
                      to={"/login"}
                      className="nav-link"
                      onClick={() => setShowCollapse(!showCollapse)}
                    >
                      <Row>
                        <LoginOutlined style={{ fontSize: "24px" }} />
                        <p style={{ marginLeft: 10 }}>Login</p>
                      </Row>
                    </Link>
                  </li>

                  <li className="nav-item">
                    <Link
                      to={"/register"}
                      className="nav-link"
                      onClick={() => setShowCollapse(!showCollapse)}
                    >
                      <Row>
                        <UserAddOutlined style={{ fontSize: "24px" }} />
                        <p style={{ marginLeft: 10 }}>Register</p>
                      </Row>
                    </Link>
                  </li>
                </ul>
              )}
            </div>
          </div>
        </nav>

        <div className=" ">
          <Switch>
            <Route exact path={["/", "/home"]} component={Home} />
            <Route exact path="/login" component={Login} />
            <Route exact path="/register" component={Register} />
            <Route exact path="/profile" component={Profile} />
            <Route path="/user" component={BoardUser} />
            <Route path="/controlpanel" component={ControlPanel} />
            <Route path="/mod" component={BoardModerator} />
            <Route path="/admin" component={BoardAdmin} />
            <Route path="/staking" component={Staking} />
          </Switch>
        </div>
        <div style={{ height: "15vh" }}></div>

        <Footer />
        <div
          className="custom-dark"
          style={{
            textAlign: "center",
            bottom: 0,
            position: "fixed",
            width: "100%",
            height: "60px",
          }}
        >
          <Row>
            <Col span={6} style={{ padding: 5 }}>
              <Link to={"/home"}>
                <Button
                  type="text"
                  style={{ height: 60 }}
                  icon={<HomeOutlined style={{ fontSize: "20px" }} />}
                  block
                >
                  <br /> Home
                </Button>
              </Link>
            </Col>
            <Col span={6} style={{ padding: 5 }}>
              <Link
                to={currentUser ? "/controlpanel/transactionhall" : "/login"}
              >
                <Button
                  style={{ height: 60 }}
                  type="text"
                  icon={<SwapOutlined style={{ fontSize: "20px" }} />}
                  block
                >
                  <br />
                  Transaction hall
                </Button>
              </Link>
            </Col>
            <Col span={6} style={{ padding: 5 }}>
              <Link to={currentUser ? "/controlpanel/referral" : "/login"}>
                <Button
                  style={{ height: 60 }}
                  type="text"
                  icon={<DollarCircleOutlined style={{ fontSize: "20px" }} />}
                  block
                >
                  <br /> Earn interest
                </Button>
              </Link>
            </Col>
            <Col span={6} style={{ padding: 5 }}>
              <Link
                to={currentUser ? "/controlpanel/profilesetting" : "/login"}
              >
                <Button
                  style={{ height: 60 }}
                  type="text"
                  icon={<UserOutlined style={{ fontSize: "20px" }} />}
                  block
                >
                  <br /> Mine
                </Button>
              </Link>
            </Col>
          </Row>
        </div>
      </div>
    </Router>
  );
};

export default App;
