import React, { useState, useEffect } from "react";
import { useDispatch, useSelector } from "react-redux";
import {
  Row,
  Col,
  Form,
  Input,
  Button,
  Checkbox,
  Avatar,
  notification,
} from "antd";
import { UserOutlined,MailOutlined,LockOutlined } from "@ant-design/icons";
import { notificaionTitle } from "../constants";
import { register } from "../slices/auth";
import { clearMessage } from "../slices/message";
import { Card } from "antd";

const Register = (props) => {
  const [form] = Form.useForm();

  const { message } = useSelector((state) => state.message);
  const dispatch = useDispatch();

  useEffect(() => {
    dispatch(clearMessage());
  }, [dispatch]);

  const handleRegister = (formValue) => {
    console.log(formValue);
    const { username, email, password } = formValue;

    dispatch(register({ username, email, password }))
      .unwrap()
      .then(() => {
        notification["success"]({
          message: notificaionTitle,
          description: "Successfully registered!",
        });
        props.history.push("/login");
        window.location.reload();
      })
      .catch(() => {
        message &&
          notification["error"]({
            message: notificaionTitle,
            description: message,
          });
      });
  };
  const tailFormItemLayout = {
    wrapperCol: {
      xs: {
        span: 24,
        offset: 0,
      },
      sm: {
        span: 16,
        offset: 0,
      },
    },
  };
  const formItemLayout = {
    labelCol: {
      xs: {
        span: 24,
      },
      sm: {
        span: 8,
      },
    },
    wrapperCol: {
      xs: {
        span: 24,
      },
      sm: {
        span: 24,
      },
    },
  };
  return (
    <>
      <div style={{ height: "10vh" }}></div>
      <Row
        style={{
          padding: "5px",
          justifyContent: "center",
          alignItems: "center",
        }}
      >
        <Col>
          <Card style={{ width: "100%" }}>
            <Row align="center">
              <Avatar
                size="large"
                style={{
                  color: "#f56a00",
                  backgroundColor: "#fde3cf",
                  width: "80px",
                  height: "80px",
                  marginBottom: 20,
                }}
                icon={
                  <UserOutlined style={{ fontSize: "50px", marginTop: 10 }} />
                }
              >
                Hi
              </Avatar>
            </Row>
            <Row align="center">
              <Form
                {...formItemLayout}
                form={form}
                name="register"
                onFinish={handleRegister}
                style={{ width: 300 }}
                scrollToFirstError
              >
                <Form.Item
                  name="username"
                  //label="Username"
                  rules={[
                    {
                      required: true,
                      message: "Please input your Username!",
                    },
                  ]}
                >
                  <Input placeholder="Username" prefix={<UserOutlined />}/>
                </Form.Item>
                <Form.Item
                  name="email"
                  //  label="E-mail"
                  rules={[
                    {
                      type: "email",
                      message: "The input is not valid E-mail!",
                    },
                    {
                      required: true,
                      message: "Please input your E-mail!",
                    },
                  ]}
                >
                  <Input placeholder="E-mail" prefix={<MailOutlined />}/>
                </Form.Item>

                <Form.Item
                  name="password"
                  // label="Password"
                  rules={[
                    {
                      required: true,
                      message: "Please input your password!",
                    },
                  ]}
                  hasFeedback
                >
                  <Input.Password placeholder="Password" prefix={<LockOutlined />}/>
                </Form.Item>

                <Form.Item
                  name="confirm"
                  //  label="Confirm Password"
                  dependencies={["password"]}
                  hasFeedback
                  rules={[
                    {
                      required: true,
                      message: "Please confirm your password!",
                    },
                    ({ getFieldValue }) => ({
                      validator(_, value) {
                        if (!value || getFieldValue("password") === value) {
                          return Promise.resolve();
                        }

                        return Promise.reject(
                          new Error(
                            "The two passwords that you entered do not match!"
                          )
                        );
                      },
                    }),
                  ]}
                >
                  <Input.Password placeholder="Confirm Password" prefix={<LockOutlined />}/>
                </Form.Item>
                <Form.Item
                  name="agreement"
                  valuePropName="checked"
                  rules={[
                    {
                      validator: (_, value) =>
                        value
                          ? Promise.resolve()
                          : Promise.reject(
                              new Error("Should accept agreement")
                            ),
                    },
                  ]}
                  {...tailFormItemLayout}
                >
                  <Checkbox>
                    I have read the <a href="##">agreement</a>
                  </Checkbox>
                </Form.Item>
                <Form.Item {...tailFormItemLayout}>
                  <Button type="primary" htmlType="submit" block>
                    Register
                  </Button>
                </Form.Item>
              </Form>
            </Row>
          </Card>
        </Col>
      </Row>
      <div style={{ height: "30vh" }}></div>
    </>
  );
};

export default Register;
