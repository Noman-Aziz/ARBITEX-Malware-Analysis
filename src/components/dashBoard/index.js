import React, { useState, useEffect } from "react";
import { Row, Col, Card, Statistic, Table, Progress,Spin } from "antd";
import Icon from "@ant-design/icons";
import { useSelector } from "react-redux";
import { BALANCEARRAYS, PLATFORMSTATISTICSARRAYS } from "../../constants";
import { ReactComponent as RegisteredTraders } from "./../assets/platform_statistics/registered_traders.svg";
import { ReactComponent as ActiveOrders } from "./../assets/platform_statistics/active_orders.svg";
import { ReactComponent as ClosedOrders } from "./../assets/platform_statistics/closed_orders.svg";
import { ReactComponent as GeneratedRoi } from "./../assets/platform_statistics/generated_roi.svg";
import { ReactComponent as OnlineUsers } from "./../assets/platform_statistics/online_traders.svg";
import { ReactComponent as TradedVolume } from "./../assets/platform_statistics/traded_volume.svg";
import { ReactComponent as UsdtErc20svg } from "./../assets/dashboard/usdt_erc20.svg";
import { ReactComponent as UsdtTrc20svg } from "./../assets/dashboard/usdt_trc20.svg";
import { ReactComponent as UsdtBep20svg } from "./../assets/dashboard/usdt_bep20.svg";
import {
  processingfetchingBalances,
  processingfetchingDeposit,
  processingfetchingPlatformStatistics,
  processingfetchingWithdraw,
  refactorBalances,
  calculateRealAvailableBalance,
} from "../../common/script";
import "antd/dist/antd.css";
import { useHistory, Redirect } from "react-router-dom";

let balanceTimer;
const DashBoard = () => {
  const [depositsState, setDeposits] = useState([]);
  const [withdrawsState, setWithdraws] = useState([]);
  const [statisticsState, setStatistics] = useState({
    registeredby24: 0,
    allusers: 0,
    tradevolume: 0,
    roi: 0,
    openorders: 0,
    closedorders: 0,
    created_at: "",
  });
  const [loading, setLoading] = useState(true);
  const [balances, setBalances] = useState({
    userTotalBalances: [],
    userTotalWithdraws: [],
    userDepositBalances: [],
  });
  const { user: currentUser } = useSelector((state) => state.auth);
  const history = useHistory();

  useEffect(() => {
    asyncFetchStates();
    balanceTimer = setInterval(() => asyncFetchStates(), 60000);
    return () => {
      clearInterval(balanceTimer);
    };
  }, []);

  async function asyncFetchStates() {
    setBalances(await processingfetchingBalances(currentUser.id));
    setDeposits(await processingfetchingDeposit());
    setWithdraws(await processingfetchingWithdraw());
    setStatistics(await processingfetchingPlatformStatistics());
  }

  const columns = [
    { title: "Date", dataIndex: "created_at", key: "created_at" },
    { title: "Amount", dataIndex: "amount", key: "amount" },
    { title: "Currency", dataIndex: "currency", key: "currency" },
  ];

  const reflectBalanceState = refactorBalances(balances);
  const realAvailableBalance =
    calculateRealAvailableBalance(reflectBalanceState);

  return (

    <Row>
      <Col span={24}>
        <Col
          span={24}
          style={{
            padding: 5,
          }}
        >
          <Card title="Your Balances" bodyStyle={{ padding: 5 }}>
            <Row>
              {BALANCEARRAYS.map((array, index) => (
                <Col xs={24} sm={24} md={12} lg={8} style={{ padding: "5px" }}>
                  <Card
                    style={{
                      width: "100%",
                    }}
                    key={index}
                    bodyStyle={{ padding: 5 }}
                  >
                    <div style={{ float: "left", width: "60%" }}>
                      <Row>
                        <Col span={24}>
                          <Row style={{ marginTop: 5 }}>
                            {index === 0 ? (
                              <Icon
                                component={UsdtErc20svg}
                                style={{
                                  fontSize: "32px",
                                  marginRight: 10,
                                }}
                              />
                            ) : index === 1 ? (
                              <Icon
                                component={UsdtBep20svg}
                                style={{
                                  fontSize: "32px",
                                  marginRight: 10,
                                }}
                              />
                            ) : index === 2 ? (
                              <Icon
                                component={UsdtTrc20svg}
                                style={{
                                  fontSize: "32px",
                                  marginRight: 10,
                                }}
                              />
                            ) : (
                              <></>
                            )}
                            <h5>{array.title}</h5>
                          </Row>

                          <Statistic
                            title="Account Balance "
                            style={{ padding: 5 }}
                            valueStyle={{ color: "#3f8600", fontSize: 14 }}
                            suffix={array.symbol}
                            value={Math.fround(
                              realAvailableBalance[index]
                            ).toFixed(2)}
                          />
                        </Col>
                      </Row>
                    </div>
                    <div style={{ float: "right", width: "40%", padding: 5 }}>
                      <Row>
                        <Statistic
                          title="Active Deposit"
                          valueStyle={{ color: "#3f8600", fontSize: 14 }}
                          suffix={array.symbol}
                          value={Math.fround(
                            reflectBalanceState.reflectuserDeposits[index]
                              .depositBalance
                          ).toFixed(2)}
                        />
                      </Row>
                      <Row>
                        <Statistic
                          title="Earned Profit "
                          valueStyle={{ color: "#3f8600", fontSize: 14 }}
                          suffix={array.symbol}
                          value={Math.fround(
                            reflectBalanceState.reflectuserDeposits[index]
                              .profitAmount
                          ).toFixed(2)}
                          // precision={6}
                        />
                      </Row>
                    </div>
                  </Card>
                </Col>
              ))}
            </Row>
          </Card>
        </Col>
        <Row>
          <Col xs={24} lg={8} sm={24} style={{ padding: 5 }}>
            <Card title="Platform statistics">
              {PLATFORMSTATISTICSARRAYS.map((array, index) => (
                <Card key={index} size="small" style={{ marginBottom: "5px" }}>
                  <Row>
                    <Col>
                      {index === 0 ? (
                        <RegisteredTraders style={{ marginTop: "7px" }} />
                      ) : index === 1 ? (
                        <OnlineUsers style={{ marginTop: "7px" }} />
                      ) : index === 2 ? (
                        <TradedVolume style={{ marginTop: "7px" }} />
                      ) : index === 3 ? (
                        <GeneratedRoi style={{ marginTop: "7px" }} />
                      ) : index === 4 ? (
                        <ActiveOrders style={{ marginTop: "7px" }} />
                      ) : index === 5 ? (
                        <ClosedOrders style={{ marginTop: "7px" }} />
                      ) : (
                        <></>
                      )}
                    </Col>
                    <Col style={{ marginLeft: "10px" }}>
                      <h5 style={{ marginBottom: "3px" }}>
                        {index === 0
                          ? statisticsState.registeredby24
                          : index === 1
                          ? statisticsState.allusers
                          : index === 2
                          ? statisticsState.tradevolume
                          : index === 3
                          ? statisticsState.roi
                          : index === 4
                          ? statisticsState.openorders
                          : index === 5
                          ? statisticsState.closedorders
                          : ""}{" "}
                        {array.unit}
                      </h5>
                      <p style={{ color: "#5e636e", marginBottom: "3px" }}>
                        {array.title}{" "}
                      </p>
                    </Col>
                  </Row>
                </Card>
              ))}
            </Card>
          </Col>
          <Col lg={16} sm={24} xs={24} style={{ padding: 5 }}>
            <Card title="Recent transactions">
              <Row>
                <Col lg={12} sm={24} xs={24}>
                  <p>Deposits</p>
                  <Table
                    style={{ width: "100%" }}
                    columns={columns}
                    pagination={false}
                    dataSource={depositsState}
                    scroll={{ x: '100%' }}

                  />
                </Col>
                <Col lg={12} sm={24} xs={24}>
                  <p>Withdrawals</p>
                  <Table
                    style={{ width: "100%" }}
                    columns={columns}
                    pagination={false}
                    dataSource={withdrawsState}
                    scroll={{ x: '100%' }}

                  />
                </Col>
              </Row>
            </Card>
          </Col>
        </Row>
        <Row
          style={{
            padding: 5,
          }}
        >
          <Card title="Account statistics" style={{ width: "100%" }}>
            <Row
              style={{
                alignItems: "center",
              }}
            >
              <Col xs={24} sm={24} md={6}>
                <Row>
                  <Col xs={12} sm={12} md={24} lg={24}>
                    <Row
                      style={{
                        justifyContent: "center",
                        alignItems: "center",
                        padding: 10,
                      }}
                    >
                      <Progress
                        type="circle"
                        percent={56}
                        width={150}
                        strokeColor={{
                          "0%": "#108ee9",
                          "100%": "#87d068",
                        }}
                        format={(percent) => `Turnover \n ${percent} `}
                      />
                    </Row>
                  </Col>
                  <Col xs={12} sm={12} md={24} lg={24}>
                    <Row
                      style={{
                        justifyContent: "center",
                        alignItems: "center",
                        padding: 10,
                      }}
                    >
                      <Progress
                        type="circle"
                        percent={75}
                        width={150}
                        strokeColor={{
                          "0%": "#108ee9",
                          "100%": "#87d068",
                        }}
                        format={(percent) => `Balance \n ${percent}`}
                      />
                    </Row>
                  </Col>
                </Row>
              </Col>
              <Col xs={24} sm={24} md={18}>
                <Row>
                  {BALANCEARRAYS.map((array, index) => (
                    <Col style={{ padding: 5 }}>
                      <Card bodyStyle={{ padding: 5 }}>
                        <Row>
                          <Col>
                            <Progress
                              type="circle"
                              strokeColor={{
                                "0%": "#87d068",
                                "100%": "#87d068",
                              }}
                              width={50}
                              percent={72.2}
                              status="active"
                            />
                          </Col>
                          <Col style={{ marginLeft: "15px" }}>
                            {array.title}
                            <br />
                            <h6 style={{ color: "#8f96a3" }}>
                              {Math.fround(realAvailableBalance[index]).toFixed(
                                2
                              )}
                            </h6>
                          </Col>
                        </Row>

                        <p
                          style={{
                            color: "#5e636e",
                            marginTop: "5px",
                            marginBottom: "3px",
                          }}
                        >
                          Deposited :
                        </p>
                        <h6 style={{ color: "#959fa3" }}>
                          {" "}
                          {Math.fround(
                            reflectBalanceState.reflectuserDeposits[index]
                              .depositBalance
                          ).toFixed(2)}{" "}
                          {array.symbol}
                        </h6>
                        <p style={{ color: "#5e636e", marginBottom: "3px" }}>
                          Paid Out :
                        </p>
                        <h6 style={{ color: "#959fa3" }}>
                          {" "}
                          {Math.fround(
                            reflectBalanceState.reflectuserWithdraws[index]
                              .totalWithdrawed
                          ).toFixed(2)}{" "}
                          {array.symbol}{" "}
                        </h6>
                        <p style={{ color: "#5e636e", marginBottom: "3px" }}>
                          Ref. Commissions :
                        </p>
                        <h6 style={{ color: "#959fa3" }}>
                          0.3% {array.symbol}
                        </h6>
                        <p style={{ color: "#5e636e", marginBottom: "3px" }}>
                          Opened Orders :
                        </p>
                        <h6 style={{ color: "#959fa3" }}>
                          {" "}
                          {index === 0 ? statisticsState.openorders : 0}{" "}
                        </h6>
                        <p style={{ color: "#5e636e", marginBottom: "3px" }}>
                          Closed Orders :
                        </p>
                        <h6 style={{ color: "#959fa3" }}>
                          {" "}
                          {index === 0 ? statisticsState.closedorders : 0}
                        </h6>
                      </Card>
                    </Col>
                  ))}
                </Row>
              </Col>
            </Row>
          </Card>
        </Row>
      </Col>
    </Row>
  );
};

export default DashBoard;
